
** Conflict (reduce/reduce) in state 34.
** Token involved: LPAR
** This state is reached from prog after reading:

option(packDec) VAR non_empty_id_list LSQPAR ID 

** The derivations that appear below have the following common factor:
** (The question mark symbol (?) represents the spot where the derivations begin to differ.)

prog 
option(packDec) list(terminated(dec,SEMICOLON)) EOF 
                dec SEMICOLON list(terminated(dec,SEMICOLON)) 
                VAR subDec 
                    non_empty_id_list typeG 
                                      LSQPAR exp RSQPAR typeG 
                                             factor 
                                             unary 
                                             primary 
                                             (?)

** In state 34, looking ahead at LPAR, reducing production
** primary -> ID 
** is permitted because of the following sub-derivation:

primary LPAR exp_list RPAR // lookahead token appears
ID . 

** In state 34, looking ahead at LPAR, reducing production
** typeG -> ID 
** is permitted because of the following sub-derivation:

type_cast 
typeG LPAR exp RPAR // lookahead token appears
ID . 
